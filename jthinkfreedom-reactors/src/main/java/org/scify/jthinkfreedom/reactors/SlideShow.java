/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.scify.jthinkfreedom.reactors;

import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;

/**
 *
 * @author xrousakis
 */
public class SlideShow extends javax.swing.JFrame {

    private String currentIcon;
    private final String ImagesPath;
    private final ArrayList<String> contentsNames;
    private int currentImage;
    private final int numberOfImages;
    private boolean perform_change;

    /**
     * Creates new form SlideShow
     */
    public SlideShow(String imagesPath) {

        perform_change = true;

        contentsNames = new ArrayList();
        currentImage = 0;
        this.ImagesPath = imagesPath;
        File folder = new File(imagesPath);
        File[] listOfFiles = folder.listFiles();
        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                contentsNames.add(listOfFiles[i].getName());
            }
        }

        numberOfImages = contentsNames.size();

        initComponents();

        System.out.println(contentsNames.get(currentImage) + ": " + imagesPath + "/" + contentsNames.get(currentImage));
        ImageIcon icon = new ImageIcon(imagesPath + "/" + contentsNames.get(currentImage));
        System.out.println(contentsNames.get(currentImage) + currentImage);
        ImageLabel.setIcon(icon);
        currentImage++;

    }

    public void SwitchPic() {
        if (perform_change == true) {
            ImageIcon icon = null;
            if (numberOfImages - 1 == currentImage) {
                currentImage = 0;
            }
            icon = new ImageIcon(ImagesPath + "/" + contentsNames.get(currentImage));
            ImageLabel.setIcon(icon);
            currentImage++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ImageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ImageLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageLabelMouseClicked
        if (perform_change == true) {
            perform_change = false;

        } else {
            perform_change = true;
            setBackground(null);

        }
    }//GEN-LAST:event_ImageLabelMouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImageLabel;
    // End of variables declaration//GEN-END:variables
}
