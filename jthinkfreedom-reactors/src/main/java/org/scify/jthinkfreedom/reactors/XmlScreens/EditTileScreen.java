/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.scify.jthinkfreedom.reactors.XmlScreens;

import static javax.swing.ListSelectionModel.SINGLE_SELECTION;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import org.scify.jthinkfreedom.reactors.Category;
import org.scify.jthinkfreedom.reactors.Parser;
import org.scify.jthinkfreedom.reactors.Tile;

/**
 *
 * @author xrousakis
 */
public class EditTileScreen extends javax.swing.JFrame {

    private String selectedImage;
    private DefaultListModel categoriesDlm;
    private DefaultListModel imagesDlm;
    //private Document configFile;
    private String selectedCategory;
    private Parser parser;
    private ArrayList<Category> categories;

    /**
     * Creates new form EditTileScreen
     */
    public EditTileScreen() {
        imagesDlm = new DefaultListModel();
        categoriesDlm = new DefaultListModel();

        initComponents();
        categoryList.setSelectionMode(SINGLE_SELECTION);
        init();
    }

    private void fillCategoriesDlm() {
        categoriesDlm.clear();
        ArrayList<String> categoryNames = parser.getCategoryNames();
        for (String s : categoryNames) {
            categoriesDlm.addElement(s);
        }

    }

    private void fillImagesDlm() {
        imagesDlm.clear();
        int value = categoriesDlm.indexOf(selectedCategory);
        Category category = categories.get(value + 1);
        ArrayList<Tile> categoryTiles = category.getTiles();
        for (Tile t : categoryTiles) {
            imagesDlm.addElement(t.getFileName());
        }
    }

    private void init() {
        parser = new Parser();
        //configFile = parser.getConfigFile();
        categories = parser.getCategories();

        fillCategoriesDlm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        categoryList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        imageList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        categoryList.setModel(categoriesDlm);
        categoryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                categoryListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(categoryList);

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 24)); // NOI18N
        jLabel1.setText("Edit Image");

        jLabel3.setText("Select Image");

        cancelButton.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(7, 7, 7));
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Category");

        imageList.setModel(imagesDlm);
        imageList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                imageListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(imageList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(editButton)
                        .addGap(61, 61, 61)
                        .addComponent(cancelButton)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, editButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(0, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(cancelButton))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_categoryListValueChanged
        if (evt.getValueIsAdjusting()) {
            selectedCategory = (String) categoryList.getSelectedValue();
            selectedImage = null;
            fillImagesDlm();
        }
    }//GEN-LAST:event_categoryListValueChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        Border border = BorderFactory.createLineBorder(Color.RED, 2);
        if (selectedImage == null) {
            JOptionPane.showMessageDialog(this, "You have to select and image.");
        } else {
            /*pass the existing category and tile to the AddTileScreen*/
            //System.out.println(chosenCategory().getName()+" "+chosenTile().getFileName());
            AddTileScreen frame = new AddTileScreen(selectedCategory, chosenTile(),chosenCategory());
            frame.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_editButtonActionPerformed

    /*returns the selected category*/
    private Category chosenCategory() {
        int value = categoriesDlm.indexOf(selectedCategory);
        return categories.get(value + 1);
    }

    private Tile chosenTile() {
        /*choose tile based on the category and the filename property of the tile*/
        ArrayList<Tile> categoryTiles = chosenCategory().getTiles();
        for (Tile t : categoryTiles) {
            if (t.getFileName().equals(selectedImage)) {
                //System.out.println(chosenCategory().getName()+" "+t.getFileName());
                return t;
            }
        }
        return null;
    }


    private void imageListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_imageListValueChanged
        if (evt.getValueIsAdjusting()) {
            selectedImage = (String) imageList.getSelectedValue();
        }
    }//GEN-LAST:event_imageListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditTileScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditTileScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditTileScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditTileScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditTileScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JList categoryList;
    private javax.swing.JButton editButton;
    private javax.swing.JList imageList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
